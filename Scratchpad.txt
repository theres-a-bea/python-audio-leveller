pydub - seems to be best for normalisation


Example Code:
from pydub import AudioSegment

def match_target_amplitude(sound, target_dBFS):
    change_in_dBFS = target_dBFS - sound.dBFS
    return sound.apply_gain(change_in_dBFS)

sound = AudioSegment.from_file("yourAudio.m4a", "m4a")
normalized_sound = match_target_amplitude(sound, -20.0)
normalized_sound.export("nomrmalizedAudio.m4a", format="mp4")

^ Adjust as per plan

array.remove(item)

FX Chain:
Autogain to -6
compressor

Compressor Settings:
    4:1
    attack 1ms
    release 30ms
    thresh -20dB

Compressor code;
    #Applies compressor
    thresh = RMS-6
    #Compressor will run at threshhold of -6dB below RMS
    print("Applying Compressor at " + str(thresh) + "dB")
    fx.compress_dynamic_range(filein, thresh, 4, 1, 30)
    print("Compressor applied")
    
        #Normalizes
    print("Applying Normalization")
    fx.normalize(filein)
    print("Normalized")